{"version":3,"sources":["webpack:///./src/lib/components/FancyParallelCoordinates.react.js"],"names":["FancyParallelCoordinates","console","log","parallelCoordinates","FancyParallelCoordinatesD3","el","props","update","id","Component","defaultProps","propTypes","PropTypes","string","setProps","func","data","array","isRequired","fontSize","number","width","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBA,wB;;;;;;;;;;;;;WACjB,6BAAoB;AAChBC,aAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAKC,mBAAL,GAA2B,IAAIC,mEAAJ,CAA+B,KAAKC,EAApC,EAAwC,KAAKC,KAA7C,CAA3B;AACH;;;WAED,8BAAqB;AACjB,WAAKH,mBAAL,CAAyBI,MAAzB,CAAgC,KAAKD,KAArC;AACH;;;WAED,kBAAS;AAAA;;AACL,0BAAO;AAAK,UAAE,EAAE,KAAKA,KAAL,CAAWE,EAApB;AAAwB,WAAG,EAAE,aAAAH,EAAE,EAAI;AAAC,eAAI,CAACA,EAAL,GAAUA,EAAV;AAAa;AAAjD,QAAP;AACH;;;;EAZiDI,+C;;;AAetDT,wBAAwB,CAACU,YAAzB,GAAwC,EAAxC;AAEAV,wBAAwB,CAACW,SAAzB,GAAqC;AACjC;AACJ;AACA;AACIH,IAAE,EAAEI,iDAAS,CAACC,MAJmB;;AAMjC;AACJ;AACA;AACA;AACIC,UAAQ,EAAEF,iDAAS,CAACG,IAVa;AAWjCC,MAAI,EAAEJ,iDAAS,CAACK,KAAV,CAAgBC,UAXW;AAYjCC,UAAQ,EAAEP,iDAAS,CAACQ,MAZa;AAajCC,OAAK,EAAET,iDAAS,CAACQ,MAbgB;AAcjCE,QAAM,EAAEV,iDAAS,CAACQ;AAde,CAArC,C","file":"b9598fc-main-wps-hmr.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport FancyParallelCoordinatesD3 from './FancyParallelCoordinatesD3'\n\n/**\n * ExampleComponent is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nexport default class FancyParallelCoordinates extends Component {\n    componentDidCatch() {\n        console.log(\"Test\");\n        this.parallelCoordinates = new FancyParallelCoordinatesD3(this.el, this.props);\n    }\n\n    componentDidUpdate() {\n        this.parallelCoordinates.update(this.props);\n    }\n\n    render() {\n        return <div id={this.props.id} ref={el => {this.el = el}} />;\n    }\n}\n\nFancyParallelCoordinates.defaultProps = {};\n\nFancyParallelCoordinates.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func,\n    data: PropTypes.array.isRequired,\n    fontSize: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n"],"sourceRoot":""}