{"version":3,"sources":["webpack:///./src/lib/components/HorizonGraphD3.js"],"names":["HorizonGraphD3","el","props","console","log","update","bind","margin","top","right","bottom","left","width","dataWidth","height","xDomain","d3","x","yDomain","y","xRange","xScale","size","names","length","yScale","bands","padding","xAxis","uid","Math","random","toString","slice","svg","append","style","g","selectAll","data","join","attr","_","i","curve","area","y0","y1","defs","I","colors","max","URL","location","d","Array","fill","text","name"],"mappings":"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","file":"ab708ef-main-wps-hmr.js","sourcesContent":["import * as d3 from 'd3npm'\n\nexport default class HorizonGraphD3 {\n    constructor(el, props) {\n        console.log(\"Constructor\");\n        this.update = this.update.bind(this);\n\n        var margin = {top: 30, right: 100, bottom: 50, left: 50}, width = props.dataWidth - margin.left - margin.right,\n            height = props.height - margin.top - margin.bottom;\n\n        // Construct scales and axes\n        const xDomain = d3.extent(props.x);\n        const yDomain = [0, d3.max(props.y)];\n        const xRange = [margin.left, width - margin.right];\n        const xScale = d3.scaleLinear(xDomain, xRange);\n        const size = height/props.names.length;\n        const yScale = d3.scaleLinear(yDomain, [size, size - props.bands * (size - props.padding)]);\n        const xAxis = d3.axisBottom(xScale);\n\n        // A unique identifier for clip paths (to avoid conflicts).\n        const uid = `O-${Math.random().toString(16).slice(2)}`;\n\n        console.log(el);\n\n        this.svg = d3.select(el).append(\"svg\")\n            .style(\"width\", width)\n            .style(\"height\", height)\n\n        const g = svg.selectAll(\"g\")\n            .data(names)\n            .join(\"g\")\n            .attr(\"transform\", (_, i) => 'translate(0, ${i*size + marginTop})');\n\n        // Construct an area generator\n        const curve = d3.curveLinear\n        const area = d3.area()\n            .curve(curve)\n            .x(i => xScale(props.x))\n            .y0(yScale(0))\n            .y1(i => yScale(props.y[i]));\n\n        const defs = g.append(\"defs\");\n\n        defs.append(\"clipPath\")\n            .attr(\"id\", (_, i) => `${uid}-clip-${i}`)\n            .append(\"rect\")\n            .attr(\"y\", padding)\n            .attr(\"width\", width)\n            .attr(\"height\", size - props.padding);\n\n        defs.append(\"path\")\n            .attr(\"id\", (_, i) => `${uid}-path-${i}`)\n            .attr(\"d\", ([, I]) => area(I));\n\n        const colors = d3.schemeGreys[Math.max(3, props.bands)];\n\n        g\n            .attr(\"clip-path\", (_, i) => `url(${new URL(`#${uid}-clip-${i}`, location)})`)\n            .selectAll(\"use\")\n            .data((d, i) => new Array(props.bands).fill(i))\n            .join(\"use\")\n            .attr(\"fill\", (_, i) => colors[i + Math.max(0, 3 - props.bands)])\n            .attr(\"transform\", (_, i) => `translate(0,${i * size})`)\n            .attr(\"xlink:href\", (i) => `${new URL(`#${uid}-path-${i}`, location)}`);\n\n        g.append(\"text\")\n            .attr(\"x\", margin.left)\n            .attr(\"y\", (size + props.padding) / 2)\n            .attr(\"dy\", \"0.35em\")\n            .text(([name]) => name);\n    }\n\n    update(props) {\n\n    }\n}"],"sourceRoot":""}