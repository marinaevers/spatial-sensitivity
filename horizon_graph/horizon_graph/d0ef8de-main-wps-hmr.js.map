{"version":3,"sources":["webpack:///./src/lib/components/HorizonGraphD3.js"],"names":["HorizonGraphD3","el","props","update","bind","summaryPlot","margin","top","right","bottom","left","width","height","numberHorizons","Math","min","y","length","xDomain","d3","x","yMax","ceil","flat","yDomain","bands","xRange","xScale","size","yScale","padding","uid","random","toString","slice","I","svg","append","attr","g","selectAll","data","i","names","floor","join","_","curve","area","y0","y1","defs","colors","bgcolor","concat","max","URL","location","d","Array","fill","text","name","fontSize","gBrushes","brushes","ranges","newBrush","brush","extent","on","brushstart","brushed","brushend","push","id","event","sourceEvent","shiftKey","remove","deleted","lastBrushID","lastBrush","document","getElementById","selection","invert","setProps","selectedRanges","drawBrushes","brushSelection","enter","insert","each","brushObject","style","undefined","exit","xAxis","yAxis","call","summarySource","myColor","domain","range","console","log","line"],"mappings":"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","file":"d0ef8de-main-wps-hmr.js","sourcesContent":["import * as d3 from 'd3'\n\nexport default class HorizonGraphD3 {\n    constructor(el, props) {\n        this.update = this.update.bind(this);\n        this.summaryPlot = this.summaryPlot.bind(this);\n\n        var margin = {top: 10, right: 10, bottom: 30, left: 30}, width = props.width - margin.left - margin.right,\n            height = props.height - margin.top - margin.bottom;\n        this.margin = margin;\n\n        // Construct scales and axes\n        this.numberHorizons = Math.min(props.numberHorizons, props.y.length);\n        const xDomain = d3.extent(props.x);\n        const yMax = Math.ceil(d3.max(props.y.flat()));\n        this.yDomain = [0, yMax];\n        const bands = yMax;\n        const xRange = [margin.left, width - margin.right];\n        this.xScale = d3.scaleLinear(xDomain, xRange);\n        const size = (height - margin.top - margin.bottom) / (this.numberHorizons + bands);\n        this.size = size;\n        this.bands = bands;\n        const yScale = d3.scaleLinear(this.yDomain, [this.size, size - bands * (size - props.padding)]);\n\n\n        // A unique identifier for clip paths (to avoid conflicts).\n        const uid = `O-${Math.random().toString(16).slice(2)}`;\n\n        const I = d3.range(props.x.length * this.numberHorizons);\n\n        this.svg = d3.select(el).append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n\n        const g = this.svg.selectAll(\"g\")\n            .data(d3.group(I, i => props.names[Math.floor(i / props.x.length)]))\n            .join(\"g\")\n            .attr(\"transform\", (_, i) => 'translate(0, ' + (i * size + margin.top) + ')');\n\n        // Construct an area generator\n        this.curve = d3.curveLinear\n        const area = d3.area()\n            .curve(this.curve)\n            .x(i => {\n                return this.xScale(props.x[i % props.x.length]);\n            })\n            .y0(yScale(0))\n            .y1(i => {\n                return yScale(props.y[Math.floor(i / props.x.length)][i % props.x.length]);\n            });\n\n        const defs = g.append(\"defs\");\n\n        defs.append(\"clipPath\")\n            .attr(\"id\", (_, i) => `${uid}-clip-${i}`)\n            .append(\"rect\")\n            .attr(\"y\", props.padding)\n            .attr(\"width\", width)\n            .attr(\"height\", size - props.padding);\n\n        defs.append(\"path\")\n            .attr(\"id\", (_, i) => `${uid}-path-${i}`)\n            .attr(\"d\", ([, I]) => area(I));\n\n        const colors = [props.bgcolor].concat(d3.schemeReds[Math.max(3, bands - 1)]);\n\n        g\n            .attr(\"clip-path\", (_, i) => `url(${new URL(`#${uid}-clip-${i}`, location)})`)\n            .selectAll(\"use\")\n            .data((d, i) => new Array(bands).fill(i))\n            .join(\"use\")\n            .attr(\"fill\", (_, i) => colors[i])\n            .attr(\"transform\", (_, i) => `translate(0,${i * size})`)\n            .attr(\"xlink:href\", (i) => `${new URL(`#${uid}-path-${i}`, location)}`);\n\n        g.append(\"text\")\n            .attr(\"x\", margin.left)\n            .attr(\"y\", (size + props.padding) / 2)\n            //.attr(\"dy\", \"0.35em\")\n            .text(([name]) => name)\n            .attr(\"font-size\", props.fontSize);\n\n        this.summaryPlot(props);\n\n        // We initially generate a SVG group to keep our brushes' DOM elements in:\n        var gBrushes = this.svg.append('g')\n            .attr(\"class\", \"brushes\");\n\n        // We also keep the actual d3-brush functions and their IDs in a list:\n        var brushes = [];\n\n        var xScale = this.xScale;\n        var ranges = [];\n\n        function newBrush() {\n            var brush = d3.brushX()\n                .extent([[margin.left, -2], [width - margin.right, height + 2]])\n                .on(\"start\", brushstart)\n                .on(\"brush\", brushed)\n                .on(\"end\", brushend);\n\n            brushes.push({id: brushes.length, brush: brush});\n\n            function brushstart(event) {\n                // your stuff here\n                if(event.sourceEvent.shiftKey) {\n                    gBrushes.selectAll(\".brush\")\n                        .remove();\n                    brushes = [];\n                    ranges = [];\n                    this.deleted = true;\n                }\n            }\n\n            function brushed() {\n                // your stuff here\n            }\n\n\n            function brushend() {\n                if(this.deleted) {\n                    newBrush();\n                }\n                else {\n\n                    // Figure out if our latest brush has a selection\n                    var lastBrushID = brushes[brushes.length - 1].id;\n                    var lastBrush = document.getElementById('brush-' + lastBrushID);\n                    var selection = d3.brushSelection(lastBrush);\n\n                    ranges.push([xScale.invert(selection[0]), xScale.invert(selection[1])]);\n                    props.setProps({selectedRanges: ranges})\n\n                    // If it does, that means we need another one\n                    if (selection && selection[0] !== selection[1]) {\n                        newBrush();\n                    }\n                }\n\n                // Always draw brushes\n                drawBrushes();\n            }\n        }\n\n        function drawBrushes() {\n\n            var brushSelection = gBrushes\n                .selectAll('.brush')\n                .data(brushes, function (d) {\n                    return d.id\n                });\n\n            // Set up new brushes\n            brushSelection.enter()\n                .insert(\"g\", '.brush')\n                .attr('class', 'brush')\n                .attr('id', function (brush) {\n                    return \"brush-\" + brush.id;\n                })\n                .each(function (brushObject) {\n                    //call the brush\n                    brushObject.brush(d3.select(this));\n                });\n\n            /* REMOVE POINTER EVENTS ON BRUSH OVERLAYS\n             *\n             * This part is abbit tricky and requires knowledge of how brushes are implemented.\n             * They register pointer events on a .overlay rectangle within them.\n             * For existing brushes, make sure we disable their pointer events on their overlay.\n             * This frees the overlay for the most current (as of yet with an empty selection) brush to listen for click and drag events\n             * The moving and resizing is done with other parts of the brush, so that will still work.\n             */\n            brushSelection\n                .each(function (brushObject) {\n                    d3.select(this)\n                        .attr('class', 'brush')\n                        .selectAll('.overlay')\n                        .style('pointer-events', function () {\n                            var brush = brushObject.brush;\n                            if (brushObject.id === brushes.length - 1 && brush !== undefined) {\n                                return 'all';\n                            } else {\n                                return 'none';\n                            }\n                        });\n                })\n\n            brushSelection.exit()\n                .remove();\n\n\n            d3.select(\"rect.selection\")\n                .style(\"fill\", \"#dbdbdb\")\n                .style(\"stroke\", \"black\")\n                .style(\"stroke-width\", \"3px\")\n        }\n\n        newBrush();\n        drawBrushes();\n\n/*        this.svg\n            .call(d3.brushX()\n                .extent([[margin.left, -2], [width - margin.right, height + 2]]));*/\n/*        d3.select(\"rect.selection\")\n            .attr(\"fill\", \"#dbdbdb\")\n            .attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", \"3px\")*/\n    }\n\n    update(props) {\n        //console.log(\"update\");\n    }\n\n    summaryPlot(props) {\n        const summaryPlot = this.svg.append(\"g\");\n\n        // Create new I array with larger numbers\n\n        // Create own yScale\n        const yScale = d3.scaleLinear(this.yDomain, [this.size*this.bands, props.padding]);\n\n        const area = d3.area()\n            .curve(this.curve)\n            .x(i => {\n                return this.xScale(props.x[i % props.x.length]);\n            })\n            .y0(yScale(0))\n            .y1(i => {\n                return yScale(props.y[Math.floor(i / props.x.length)][i % props.x.length]);\n            });\n\n        const xAxis = d3.axisBottom(this.xScale);\n        const yAxis = d3.axisLeft(yScale);\n\n        summaryPlot\n            .attr(\"transform\", (_, i) => `translate(0,${this.size * (this.numberHorizons) + this.margin.top})`)\n            .append(\"g\")\n            .call(xAxis)\n            .attr(\"transform\", (_, i) => `translate(0,${this.size*this.bands})`);\n\n        summaryPlot\n            .append(\"g\")\n            .call(yAxis)\n            .attr(\"transform\", (_, i) => `translate(${this.margin.left}, 0)`);\n\n        summaryPlot\n            .selectAll(\"text\")\n            .attr(\"font-size\", props.fontSize);\n\n        const I = d3.range(props.x.length * this.numberHorizons, props.x.length * props.y.length);\n\n        var summarySource = summaryPlot.selectAll(\".area\")\n            .data(d3.group(I, i => props.names[Math.floor(i / props.x.length)]))\n            .enter().append(\"g\")\n            .attr(\"class\", function (_, d) {\n                return 'area ${i}';\n            });\n\n        var myColor = d3.scaleOrdinal().domain(props.names.slice(this.numberHorizons))\n            .range(d3.schemeSet2);\n        summarySource.append(\"path\")\n            .attr(\"d\", ([, I]) => area(I))\n            .attr(\"fill\", (d) => {\n                console.log(d[0]);\n                return myColor(d[0]);\n            })\n            .attr(\"opacity\", 0.3);\n\n        // Add lines\n        const line = d3.line()\n            .curve(this.curve)\n            .x(i => {\n                return this.xScale(props.x[i % props.x.length]);\n            })\n            .y(i => {\n                return yScale(props.y[Math.floor(i / props.x.length)][i % props.x.length]);\n            });\n        summaryPlot.selectAll(\".lines\")\n            .data(d3.group(I, i => props.names[Math.floor(i / props.x.length)]))\n            .enter().append(\"g\")\n            .append(\"path\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", (d) => myColor(d[0]))\n            .attr(\"d\", ([, I]) => line(I))\n    }\n}"],"sourceRoot":""}